[gd_scene load_steps=5 format=2]

[ext_resource path="res://assets/ui/HUDFont.tres" type="DynamicFont" id=1]
[ext_resource path="res://assets/ui/HUDFontSmall.tres" type="DynamicFont" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends VBoxContainer

export var TEXT_COLOR := Color.green

export var BAR_COLOR := Color.green
export var BAR_LOW_COLOR := Color.red
export var BAR_LOW_COLOR_2 := Color.yellow


onready var hp := $Health
onready var ammo := $Ammo
onready var module := $Module

onready var hp_bar := $HealthBar
onready var ammo_bar := $AmmoBar
onready var energy_bar := $EnergyBar

var hp_style: StyleBoxFlat
var ammo_style: StyleBoxFlat
var module_style: StyleBoxFlat

var player: Player

func _ready():
	hp.add_color_override(\"default_color\", TEXT_COLOR)
	ammo.add_color_override(\"default_color\", TEXT_COLOR)
	module.add_color_override(\"default_color\", TEXT_COLOR)
	
	
	hp_style = StyleBoxFlat.new()
	hp_style.bg_color = BAR_COLOR
	
	hp_bar.add_stylebox_override(\"fg\", hp_style)
	
	ammo_style = StyleBoxFlat.new()
	ammo_style.bg_color = BAR_COLOR
	
	module_style = StyleBoxFlat.new()
	module_style.bg_color = BAR_COLOR
	
	ammo_bar.add_stylebox_override(\"fg\", ammo_style)
	energy_bar.add_stylebox_override(\"fg\", module_style)
	
	
	yield(get_tree(), \"idle_frame\")
	
	player = GameManager.player
	# warning-ignore:return_value_discarded
	player.connect(\"on_damage\", self, \"update_health\")
	
	hp_bar.max_value = player.MAX_HP
	energy_bar.max_value = player.MAX_ENERGY
	module.text = \"Module: \" + player.module.module_name	
	

func _process(_delta):
	if not player: return
	
	ammo.text = \"%s: %d [%s]\" % [\"Ammo\", player.weapon.ammo, player.weapon.weapon_name]
	ammo_bar.value = float(player.weapon.ammo)/player.weapon.MAX_AMMO * 100
	
	update_energy()
	
func update_health(_dmg):
	yield(get_tree(), \"idle_frame\")
	hp.text = \"%s: %d\" % [\"Health\", player.hp]
	
	hp_bar.value = player.hp
	if hp_bar.value < 25:
		hp_style.bg_color = BAR_LOW_COLOR
	else:
		hp_style.bg_color = BAR_COLOR
	
func update_ammo():
	pass
	
func update_energy():
	energy_bar.value = player.energy
	
	if energy_bar.value < player.module.ENERGY_COST:
		module_style.bg_color = BAR_LOW_COLOR_2
	else:
		module_style.bg_color = BAR_COLOR
	

static func generate_bar(name, percent):
	percent = max(0, percent)
	
# warning-ignore:integer_division
	var bar = \"â– \".repeat( int(percent * 100)/10 )
# warning-ignore:integer_division
	var space = \".\".repeat( 10 - int(percent * 100)/10 )
	
	return \"%s: %s\" % [name, int(percent * 100), bar, space]
	
	
	
"

[sub_resource type="StyleBoxFlat" id=2]
bg_color = Color( 1, 1, 1, 1 )

[node name="HUD" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MainMargins" type="MarginContainer" parent="."]
margin_left = 16.0
margin_top = 16.0
margin_right = 40.0
margin_bottom = 40.0

[node name="Columns" type="HBoxContainer" parent="MainMargins"]
margin_right = 24.0
margin_bottom = 24.0

[node name="Gauges" type="Control" parent="MainMargins/Columns"]
margin_bottom = 24.0

[node name="ColorRect" type="ColorRect" parent="MainMargins/Columns/Gauges"]
modulate = Color( 0.145098, 0.180392, 0.129412, 0.321569 )
margin_right = 368.0
margin_bottom = 120.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PlayerBars" type="VBoxContainer" parent="MainMargins/Columns/Gauges"]
margin_left = 8.0
margin_top = 8.0
margin_right = 360.0
margin_bottom = 98.0
size_flags_vertical = 2
custom_constants/separation = 0
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}
TEXT_COLOR = Color( 0.509804, 0.960784, 0.509804, 1 )
BAR_COLOR = Color( 0.509804, 0.960784, 0.509804, 1 )
BAR_LOW_COLOR = Color( 1, 0.305882, 0.305882, 1 )
BAR_LOW_COLOR_2 = Color( 1, 0.619608, 0.176471, 1 )

[node name="Health" type="RichTextLabel" parent="MainMargins/Columns/Gauges/PlayerBars"]
margin_right = 352.0
margin_bottom = 30.0
custom_fonts/normal_font = ExtResource( 1 )
text = "Health"
fit_content_height = true
scroll_active = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HealthBar" type="ProgressBar" parent="MainMargins/Columns/Gauges/PlayerBars"]
margin_top = 30.0
margin_right = 352.0
margin_bottom = 35.0
rect_min_size = Vector2( 0, 5 )
custom_styles/fg = SubResource( 2 )
value = 100.0
percent_visible = false

[node name="--SPACE--" type="Control" parent="MainMargins/Columns/Gauges/PlayerBars"]
margin_top = 35.0
margin_right = 352.0
margin_bottom = 40.0
rect_min_size = Vector2( 0, 5 )

[node name="Ammo" type="RichTextLabel" parent="MainMargins/Columns/Gauges/PlayerBars"]
margin_top = 40.0
margin_right = 352.0
margin_bottom = 62.0
custom_fonts/normal_font = ExtResource( 2 )
text = "Ammo"
fit_content_height = true
scroll_active = false

[node name="AmmoBar" type="ProgressBar" parent="MainMargins/Columns/Gauges/PlayerBars"]
margin_top = 62.0
margin_right = 352.0
margin_bottom = 65.0
rect_min_size = Vector2( 0, 3 )
custom_styles/fg = SubResource( 2 )
value = 100.0
percent_visible = false

[node name="--SPACE--2" type="Control" parent="MainMargins/Columns/Gauges/PlayerBars"]
margin_top = 65.0
margin_right = 352.0
margin_bottom = 70.0
rect_min_size = Vector2( 0, 5 )

[node name="Module" type="RichTextLabel" parent="MainMargins/Columns/Gauges/PlayerBars"]
margin_top = 70.0
margin_right = 352.0
margin_bottom = 92.0
custom_fonts/normal_font = ExtResource( 2 )
fit_content_height = true
scroll_active = false

[node name="EnergyBar" type="ProgressBar" parent="MainMargins/Columns/Gauges/PlayerBars"]
margin_top = 92.0
margin_right = 352.0
margin_bottom = 95.0
rect_min_size = Vector2( 0, 3 )
custom_styles/fg = SubResource( 2 )
value = 100.0
percent_visible = false
