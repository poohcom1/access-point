[gd_scene load_steps=24 format=2]

[ext_resource path="res://assets/weapons/turret.png" type="Texture" id=1]
[ext_resource path="res://assets/SE/BuildingDestroy1.mp3" type="AudioStream" id=2]
[ext_resource path="res://ui/ValueBar.tscn" type="PackedScene" id=3]
[ext_resource path="res://assets/fx/gun_laser_ground.png" type="Texture" id=4]
[ext_resource path="res://assets/SE/Turret2.mp3" type="AudioStream" id=6]

[sub_resource type="GDScript" id=1]
script/source = "extends FriendlyStructure

# Properties
export var DAMAGE = 1
export var SHOOT_INTERVAL = 0.05
export var RANGE := 125.0 setget _set_range

export var BATTERY_PER_BULLET := 0.05

export(Array, AudioStream) var ShootSounds: Array

# Fields
var enemies_in_range := []
var target: Enemy = null

var dir: int = AnimUtil.Dir.BottomRight

# Nodes
onready var shoot_timer := $ShootTimer
onready var range_area := $RangeArea
onready var shoot_fx := $ShootFx

onready var anim_sprite := $AnimatedSprite


func _ready():
	# warning-ignore:return_value_discarded
	range_area.connect(\"body_entered\", self, \"_on_body_entered\")
	
	# warning-ignore:return_value_discarded
	range_area.connect(\"body_exited\", self, \"_on_body_exited\")
	
	# warning-ignore:return_value_discarded
	shoot_timer.connect(\"timeout\", self, \"_on_shoot\")
	shoot_timer.start(SHOOT_INTERVAL)
	
func _on_shoot():
	if battery <= 0: return
	
	if not bugged:
		#if target == null or not is_instance_valid(target) or not target in enemies_in_range:
		target = find_weakest_target()
	else:
		target = find_healthiest_target()
		
	if target == null or not is_instance_valid(target): return
	
	battery -= BATTERY_PER_BULLET

	var fx = shoot_fx.duplicate()
	
	fx.visible = true
	add_child(fx)
	
	fx.global_position = target.global_position + Vector2(
		rand_range(-8, 8), rand_range(-8, 8)
	)

	
	if fx.global_position.y < global_position.y:
		fx.z_index = -1
	fx.play()

	target.on_hit(DAMAGE)
	
	if not is_instance_valid(target) or target.health < 0:
		enemies_in_range.erase(target)
		
	var SE = ShootSounds[randi() % ShootSounds.size()]
		
	var audio = OneShotAudio2D.new(SE, -5)
	audio.max_distance = 500
	audio.attenuation = 0.5
	add_child(audio)
	
	_set_animation()

func _on_body_entered(body):
	if body is Enemy:
		enemies_in_range.append(body)
	
func _on_body_exited(body):
	if body is Enemy:
		enemies_in_range.erase(body)

func _set_range(val):
	RANGE = val
	$RangeArea/CollisionShape2D.shape.radius = val
	
var previous_dir = dir
	
func _set_animation():
	if not target: return
	
	dir = AnimUtil.get_dir(target.global_position.angle_to_point(global_position))
	
	dir = AnimUtil.turn(previous_dir, dir)
	previous_dir = dir
	
	anim_sprite.flip_h = abs(AnimUtil.Dir2Angle[dir]) > 90

	anim_sprite.play(AnimUtil.Dir2Anim[dir])
	
# AI
func find_weakest_target():
	var weakest = null
	var min_health = INF
	
	for enemy in enemies_in_range:
		# TODO: Line of sight check. This below doesn't seem to work
		#$LineOfSight.cast_to = to_local(enemy.global_position)
		#if $LineOfSight.is_colliding(): 
		#	continue
		#
		if enemy.health < min_health:
			weakest = enemy
			min_health = enemy.health
			
	return weakest

func on_destroyed():
	shoot_timer.stop()
	$CollisionPolygon2D.disabled = true

# Bugged AI
func find_healthiest_target():
	var healthiest = null
	var max_health = -1
	
	for enemy in enemies_in_range:
		if enemy.health > max_health:
			healthiest = enemy
			max_health = enemy.health
			
	return healthiest
"

[sub_resource type="AtlasTexture" id=2]
atlas = ExtResource( 1 )
region = Rect2( 0, 0, 96, 96 )

[sub_resource type="AtlasTexture" id=3]
atlas = ExtResource( 1 )
region = Rect2( 384, 0, 96, 96 )

[sub_resource type="AtlasTexture" id=4]
atlas = ExtResource( 1 )
region = Rect2( 192, 0, 96, 96 )

[sub_resource type="AtlasTexture" id=5]
atlas = ExtResource( 1 )
region = Rect2( 288, 0, 96, 96 )

[sub_resource type="AtlasTexture" id=6]
atlas = ExtResource( 1 )
region = Rect2( 96, 0, 96, 96 )

[sub_resource type="SpriteFrames" id=7]
animations = [ {
"frames": [ SubResource( 2 ) ],
"loop": true,
"name": "front",
"speed": 5.0
}, {
"frames": [ SubResource( 3 ) ],
"loop": true,
"name": "back",
"speed": 5.0
}, {
"frames": [ SubResource( 4 ) ],
"loop": true,
"name": "side",
"speed": 5.0
}, {
"frames": [ SubResource( 5 ) ],
"loop": true,
"name": "sideback",
"speed": 5.0
}, {
"frames": [ SubResource( 6 ) ],
"loop": true,
"name": "sidefront",
"speed": 5.0
} ]

[sub_resource type="CircleShape2D" id=8]
radius = 125.0

[sub_resource type="RectangleShape2D" id=9]
extents = Vector2( 19.7339, 20.6122 )

[sub_resource type="CanvasItemMaterial" id=10]
light_mode = 1

[sub_resource type="AtlasTexture" id=11]
atlas = ExtResource( 4 )
region = Rect2( 0, 0, 32, 48 )

[sub_resource type="AtlasTexture" id=12]
atlas = ExtResource( 4 )
region = Rect2( 32, 0, 32, 48 )

[sub_resource type="AtlasTexture" id=13]
atlas = ExtResource( 4 )
region = Rect2( 64, 0, 32, 48 )

[sub_resource type="AtlasTexture" id=14]
atlas = ExtResource( 4 )
region = Rect2( 96, 0, 32, 48 )

[sub_resource type="AtlasTexture" id=15]
atlas = ExtResource( 4 )
region = Rect2( 128, 0, 32, 48 )

[sub_resource type="AtlasTexture" id=16]
atlas = ExtResource( 4 )
region = Rect2( 160, 0, 32, 48 )

[sub_resource type="SpriteFrames" id=17]
animations = [ {
"frames": [ SubResource( 11 ), SubResource( 12 ), SubResource( 13 ), SubResource( 14 ), SubResource( 15 ), SubResource( 16 ) ],
"loop": true,
"name": "default",
"speed": 22.0
} ]

[sub_resource type="GDScript" id=18]
script/source = "extends AnimatedSprite


func _ready():
	connect(\"animation_finished\", self, \"queue_free\")


"

[node name="Turret" type="StaticBody2D" groups=[
"turret",
]]
z_index = 45
collision_layer = 3
script = SubResource( 1 )
MAX_HEALTH = 200.0
MAX_BATTERY = 8.0
DESTROYED_SOUND = ExtResource( 2 )
battery = 8.0
DAMAGE = 3
SHOOT_INTERVAL = 0.1
ShootSounds = [ ExtResource( 6 ) ]

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
position = Vector2( -0.176781, -0.176777 )
scale = Vector2( 1.50823, 1.50823 )
frames = SubResource( 7 )
animation = "sidefront"

[node name="ShootTimer" type="Timer" parent="."]
wait_time = 0.1

[node name="RangeArea" type="Area2D" parent="."]
modulate = Color( 0.929412, 0.92549, 0.54902, 1 )
monitorable = false
collision_layer = 4
collision_mask = 4

[node name="CollisionShape2D" type="CollisionShape2D" parent="RangeArea"]
visible = false
shape = SubResource( 8 )

[node name="ClickArea" type="Area2D" parent="."]
visible = false
collision_layer = 0
collision_mask = 0

[node name="CollisionShape2D" type="CollisionShape2D" parent="ClickArea"]
shape = SubResource( 9 )

[node name="LineOfSight" type="RayCast2D" parent="."]
enabled = true
collision_mask = 524288

[node name="Health" parent="." instance=ExtResource( 3 )]
position = Vector2( 0, 29.8582 )
value = "health"
max_value = "MAX_HEALTH"
progress_color = Color( 0.137255, 0.792157, 0, 1 )
overload_color = Color( 0.419608, 0.780392, 0.937255, 1 )
x_scale = 0.25
hide_if_full = false

[node name="Battery" parent="." instance=ExtResource( 3 )]
position = Vector2( 0, 38 )
value = "battery"
max_value = "MAX_BATTERY"
progress_color = Color( 0, 0.34902, 0.792157, 1 )
overload_color = Color( 0.419608, 0.780392, 0.937255, 1 )
x_scale = 5.0
hide_if_full = false

[node name="ShootFx" type="AnimatedSprite" parent="."]
visible = false
material = SubResource( 10 )
z_index = 29
frames = SubResource( 17 )
script = SubResource( 18 )

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="."]
polygon = PoolVector2Array( 0, -16, -16, -8, -16, 16, 0, 24, 16, 16, 16, -8 )

[node name="Polygon2D" type="Polygon2D" parent="."]
visible = false
position = Vector2( 0, -8 )
polygon = PoolVector2Array( -16, 24, 0, 32, 16, 24, 0, 16 )
