[gd_scene load_steps=9 format=2]

[ext_resource path="res://assets/white.png" type="Texture" id=1]
[ext_resource path="res://weapons/objects/ShootArea.tscn" type="PackedScene" id=2]
[ext_resource path="res://ui/ValueBar.tscn" type="PackedScene" id=3]

[sub_resource type="GDScript" id=1]
script/source = "tool
extends Structure

# Properties
export var DAMAGE = 1
export var SHOOT_INTERVAL = 0.05
export var RANGE := 125.0 setget _set_range

export var BATTERY_PER_BULLET := 0.05

export var SE: AudioStream = preload(\"res://assets/SE/GunShot2.mp3\")

# Fields
var enemies_in_range := []
var target: Enemy = null

# Nodes
onready var shoot_timer := $ShootTimer
onready var range_area := $RangeArea
onready var shoot_area := $ShootArea


func _ready():
	# warning-ignore:return_value_discarded
	range_area.connect(\"body_entered\", self, \"_on_body_entered\")
	
	# warning-ignore:return_value_discarded
	range_area.connect(\"body_exited\", self, \"_on_body_exited\")
	
	# warning-ignore:return_value_discarded
	shoot_timer.connect(\"timeout\", self, \"_on_shoot\")
	shoot_timer.start(SHOOT_INTERVAL)
	
	shoot_area.get_node(\"Effect\").modulate = Color(1.0, 0.7, 0.7)
	shoot_area.get_node(\"Effect\").transform.scaled(Vector2(1.5, 1.5))
	
func _on_shoot():
	if battery <= 0: return
	
	if not bugged:
		#if target == null or not is_instance_valid(target) or not target in enemies_in_range:
		target = find_weakest_target()
	else:
		target = find_healthiest_target()
		
	if target == null or not is_instance_valid(target): return
	
	battery -= BATTERY_PER_BULLET

	shoot_area.global_position = target.global_position
	shoot_area.shoot()
	

	target.on_hit(DAMAGE)
	
	if not is_instance_valid(target) or target.health < 0:
		enemies_in_range.erase(target)
		
	var audio = OneShotAudio2D.new(SE, -10)
	audio.volume_db = -20
	audio.max_distance = 300
	audio.attenuation = 0.5
	add_child(audio)
	

func _on_body_entered(body):
	if body is Enemy:
		enemies_in_range.append(body)
	
func _on_body_exited(body):
	if body is Enemy:
		enemies_in_range.erase(body)

func _set_range(val):
	RANGE = val
	$RangeArea/CollisionShape2D.shape.radius = val
	
# AI
func find_weakest_target():
	var weakest = null
	var min_health = INF
	
	for enemy in enemies_in_range:
		# TODO: Line of sight check. This below doesn't seem to work
		#$LineOfSight.cast_to = to_local(enemy.global_position)
		#if $LineOfSight.is_colliding(): 
		#	continue
		#
		if enemy.health < min_health:
			weakest = enemy
			min_health = enemy.health
			
	return weakest

# Bugged AI
func find_healthiest_target():
	var healthiest = null
	var max_health = -1
	
	for enemy in enemies_in_range:
		if enemy.health > max_health:
			healthiest = enemy
			max_health = enemy.health
			
	return healthiest
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 12.4308, 12.883 )

[sub_resource type="SpriteFrames" id=3]
animations = [ {
"frames": [ ExtResource( 1 ) ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[sub_resource type="CircleShape2D" id=4]
radius = 175.0

[sub_resource type="RectangleShape2D" id=5]
extents = Vector2( 19.7339, 20.6122 )

[node name="Turret" type="StaticBody2D" groups=[
"turret",
]]
script = SubResource( 1 )
MAX_BATTERY = 8.0
DAMAGE = 3
SHOOT_INTERVAL = 0.1

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
visible = false
shape = SubResource( 2 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
modulate = Color( 0.388235, 0.388235, 0.388235, 1 )
position = Vector2( -0.176781, -0.176777 )
scale = Vector2( 1.50823, 1.50823 )
frames = SubResource( 3 )

[node name="ShootTimer" type="Timer" parent="."]
wait_time = 0.1

[node name="ShootArea" parent="." instance=ExtResource( 2 )]

[node name="RangeArea" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="RangeArea"]
shape = SubResource( 4 )

[node name="LineOfSight" type="RayCast2D" parent="."]
enabled = true
collision_mask = 524288

[node name="ClickArea" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="ClickArea"]
visible = false
shape = SubResource( 5 )

[node name="ValueBar" parent="." instance=ExtResource( 3 )]
position = Vector2( 0, 14.7609 )
value = "battery"
max_value = "MAX_BATTERY"
progress_color = Color( 0, 0.34902, 0.792157, 1 )
overload_color = Color( 0.419608, 0.780392, 0.937255, 1 )
x_scale = 5.0
