[gd_scene load_steps=9 format=2]

[ext_resource path="res://assets/weapons/radar.png" type="Texture" id=1]
[ext_resource path="res://ui/ValueBar.tscn" type="PackedScene" id=2]
[ext_resource path="res://assets/weapons/radar_lights.png" type="Texture" id=3]

[sub_resource type="GDScript" id=1]
script/source = "tool
extends FriendlyStructure

# Properties
export var radar_range = 20
export(Array, NodePath) var next_radars = []

export var BATTERY_LIFE: float = 60 * 5

const drain_interval := 1.0
const radar_group = \"radar\"

const EPSILON = 0.00001

# Fields
var tilemap_position: Vector2 # Cached for minimap

# Nodes
onready var battery_timer := $BatteryTimer

func _ready():
	add_to_group(radar_group)
	
	# warning-ignore:return_value_discarded
	battery_timer.connect(\"timeout\", self, \"battery_drain\")
	battery_timer.start(drain_interval)
	
	# warning-ignore:return_value_discarded
	connect(\"on_activate\", self, \"_on_activated\")
	

func battery_drain():
	if battery > EPSILON:
		battery -= drain_interval/BATTERY_LIFE
		
		if battery <= EPSILON:
			emit_signal(\"on_deactivate\")
			battery_timer.stop()
	
func _on_activated():
	for radar in next_radars:
		get_node(radar).revealed = true
		
func on_destroyed():
	
	$CollisionPolygon2D.set_deferred(\"disabled\", true)

# @Override
func add_battery(_amt):
	if battery <= EPSILON:
		.add_battery(_amt)
		battery_timer.start(drain_interval)
		battery = MAX_BATTERY
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 17.0946, 16.4503 )

[sub_resource type="SpriteFrames" id=3]
animations = [ {
"frames": [ ExtResource( 1 ) ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[sub_resource type="CanvasItemMaterial" id=4]
light_mode = 1

[sub_resource type="Animation" id=5]
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 3.605, 4.43827 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 0, 0, 1 ), Color( 1, 1, 1, 0 ) ]
}

[node name="Radar" type="StaticBody2D"]
z_index = 45
collision_layer = 3
script = SubResource( 1 )
battery = 3.71333
radar_range = 50

[node name="Health" parent="." instance=ExtResource( 2 )]
position = Vector2( -0.078743, 40 )
value = "health"
max_value = "MAX_HEALTH"
progress_color = Color( 0.513726, 1, 0.509804, 1 )

[node name="Energy" parent="." instance=ExtResource( 2 )]
visible = false
position = Vector2( -0.078743, 48 )
script = null

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="."]
position = Vector2( 0.561867, 8.80256 )
polygon = PoolVector2Array( -0.561867, -0.802555, 23.4381, 15.1974, -0.561867, 23.1974, -24.5619, 15.1974 )

[node name="ClickArea" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="ClickArea"]
visible = false
shape = SubResource( 2 )

[node name="BatteryTimer" type="Timer" parent="."]

[node name="Sprite" type="AnimatedSprite" parent="."]
frames = SubResource( 3 )

[node name="Lights" type="Sprite" parent="."]
modulate = Color( 1, 0.000227438, 0.000227438, 0.999773 )
material = SubResource( 4 )
texture = ExtResource( 3 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Lights"]
autoplay = "lights"
anims/lights = SubResource( 5 )

[node name="Polygon2D" type="Polygon2D" parent="."]
visible = false
polygon = PoolVector2Array( -12, 24, 0, 28, 12, 24, 0, 20 )
