[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Weapon

export var SHOOT_INTERVAL := 0.05
export var DAMAGE = 1
export var KNOCKBACK = 10

export var AOE = false

# Fields
var wall_hit := false

# Nodes
const ShootArea = preload(\"res://weapons/objects/ShootArea.tscn\")

var shoot_collider: Area2D

onready var line_of_sight := $LineOfSight
onready var shoot_interval := Timer.new()

func _ready():
	## Timer
	
	# warning-ignore:return_value_discarded
	shoot_interval.connect(\"timeout\", self, \"_on_shoot\")
	shoot_interval.autostart = true
	add_child(shoot_interval)
	
	## Hit-scan
	shoot_collider = ShootArea.instance()
	add_child(shoot_collider)
	
	
	## Name
	weapon_name = \"Submachine-gun\"

func _physic_process(_delta):
	pass
	
func _on_shoot():		
	shoot_collider.shoot()
		
	ammo -= 1
	
	var enemies = shoot_collider.get_overlapping_bodies()
	
	var nearest = get_nearest_enemy(enemies)
	
	if nearest != null:
		nearest.on_hit(DAMAGE)
		nearest.on_hit_knockback(
			global_position.direction_to(nearest.global_position) * KNOCKBACK)
				
		
	if AOE: 
		for body in enemies:
			if body is Enemy and body != nearest:
				body.on_hit(DAMAGE)
				body.on_hit_knockback(
					global_position.direction_to(body.global_position) * KNOCKBACK)
			
	
func get_nearest_enemy(bodies):
	var nearest_enemy = null
	var nearest_distance = INF
	
	for body in bodies:
		if body is Enemy:
			var distance = body.global_position.distance_to(get_global_mouse_position())
			if distance < nearest_distance:
				nearest_enemy = body
				nearest_distance = distance
			
	return nearest_enemy

func _on_hit():
	pass

func on_active():
	if Input.is_action_pressed(\"shoot\") and ammo > 0:
		line_of_sight.cast_to = (get_global_mouse_position() - global_position)
	
		if line_of_sight.is_colliding() and line_of_sight.get_collider() is TileMap:
			shoot_collider.global_position = line_of_sight.get_collision_point()
		else:
			shoot_collider.global_position = get_global_mouse_position()
			
		if Input.is_action_just_pressed(\"shoot\"):
			shoot_interval.start(SHOOT_INTERVAL)
			_on_shoot()
			
		#shoot_collider.get_node(\"Particles\").emitting = true
	else:
		on_switch_out()
		#shoot_collider.get_node(\"Particles\").emitting = false

func on_switch():
	shoot_interval.start(SHOOT_INTERVAL)		

func on_switch_out():
	shoot_interval.stop()
	pass #shoot_collider.get_node(\"Particles\").emitting = false
		
		
"

[node name="MachineGun" type="Node2D"]
script = SubResource( 1 )
MAX_AMMO = 1000
AOE = true

[node name="LineOfSight" type="RayCast2D" parent="."]
enabled = true
collision_mask = 524288
