[gd_scene load_steps=6 format=2]

[ext_resource path="res://assets/red.png" type="Texture" id=1]
[ext_resource path="res://ui/ValueBar.tscn" type="PackedScene" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Enemy

# Properties
export var PATHFIND_INTERVAL = 0.1

export var DAMAGE = 5
export var ATTACK_INTERVAL = 0.2

# Fields
var was_touching := false # If touching player on the previous frame
var is_attacking := false # Attack flag set from timer

# Navigation
enum NavigationStates { Attack, Retreat }
var nav_state = NavigationStates.Attack

# Nodes
var attack_timer := Timer.new()
var pathfind_timer := Timer.new()

# Signals
func _ready():
	add_child(attack_timer)
	attack_timer.start(ATTACK_INTERVAL)
	# warning-ignore:return_value_discarded
	attack_timer.connect(\"timeout\", self, \"_on_attack\")
	
	# Wait for idle frame to get player
	yield(get_tree(), \"idle_frame\")
	
	navigation_target = $\"/root/GameManager\".player
	# warning-ignore:return_value_discarded	
	pathfind_timer.connect(\"timeout\", self, \"generate_path\")
	add_child(pathfind_timer)
	pathfind_timer.start(PATHFIND_INTERVAL)

func _physics_process(_delta):	
	# AI
	if not is_instance_valid(navigation_target):
		nav_state = NavigationStates.Attack
	
	if health > MAX_HEALTH * 0.5 and nav_state != NavigationStates.Attack:
		navigation_target = $\"/root/GameManager\".player
		nav_state = NavigationStates.Attack
	elif health <= MAX_HEALTH * 0.5 and nav_state != NavigationStates.Retreat:
		var healers = get_tree().get_nodes_in_group(\"healer\")
		
		if healers.size() > 0:
			navigation_target = MathHelper.get_nearest_node(self, healers)
			nav_state = NavigationStates.Retreat	
		
	
	## Pathfinding
	mv = navigate()
	
	mv = move_and_slide(mv)
	
	## Attack
	for i in get_slide_count():
		var collision = get_slide_collision(i)
		if collision.collider is Player:
			if not was_touching or is_attacking:
				collision.collider.on_hit(DAMAGE)
				is_attacking = false
				was_touching = true
			
				attack_timer.start()
			break

func _on_attack():
	is_attacking = true
	
func on_death():
	queue_free()
"

[sub_resource type="SpriteFrames" id=2]
animations = [ {
"frames": [ ExtResource( 1 ) ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[sub_resource type="CircleShape2D" id=3]
radius = 8.48656

[node name="MeleeBug" type="KinematicBody2D"]
script = SubResource( 1 )
MAX_HEALTH = 15.0
enemy_class = "melee"
DAMAGE = 3

[node name="ValueBar" parent="." instance=ExtResource( 2 )]
margin_top = -12.8603
margin_bottom = -9.86029
value = "health"
max_value = "MAX_HEALTH"

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
position = Vector2( 0.0271316, 0.0735059 )
scale = Vector2( 1.04116, 1.04116 )
frames = SubResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( -0.0662114, 0.0662174 )
shape = SubResource( 3 )
