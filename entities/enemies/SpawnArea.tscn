[gd_scene load_steps=3 format=2]

[sub_resource type="GDScript" id=4]
script/source = "extends Area2D

export var TRIGGERED := false
export var DISABLE_ON_SCREEN := true

export var SPAWN_COUNT := 1000
export var SPAWN_INTERVAL := 10.0
export var SPAWN_INCREMENT := 0.0
export var SPAWN_MAX_INTERVAL := 120.0
export var SPAWN_MIN_INTERVAL := 5.0

export var ENEMY_AMOUNT := 10
export var ENEMY_MAX_AMOUNT := 100
export var ENEMY_MIN_AMOUNT := 1
export(float, 0.0, 1.0) var MEDIC_CHANCE := 0.1

export var ENEMY_INCREMENT := 0
export var ENEMY_PRE_AGGRO := true

export var SPAWNS_PER_FRAME = 5

# Fields
var interval

var trigger_areas := []

var on_screen = false

var enemies_to_spawn := []

# Nodes
onready var timer := $Interval
onready var radius = $SpawnArea.shape.radius

# Enemies
const MeleeBug = preload(\"res://entities/enemies/MeleeBug.tscn\")
const HealerBug = preload(\"res://entities/enemies/HealerBug.tscn\")

func _ready():
	interval = SPAWN_INTERVAL
	
	if DISABLE_ON_SCREEN:
		$VisibilityNotifier.connect(\"screen_entered\", self, \"enter_screen\")
		$VisibilityNotifier.connect(\"screen_exited\", self, \"exit_screen\")
		
		$VisibilityNotifier.rect = Rect2(-radius, -radius, radius*2, radius*2)
	
	for child in get_children():
		if child is Area2D:
			child.connect(\"body_entered\", self, \"on_enter\")
			trigger_areas.append(child)
		
	if TRIGGERED:
		start_spawn()
		
func on_enter(body):
	if body is Player:
		start_spawn()

func start_spawn():
	if not TRIGGERED:
		TRIGGERED = true
		timer.connect(\"timeout\", self, \"on_spawn\")
		on_spawn()
		
		for trigger in trigger_areas:
			trigger.queue_free()
	
func on_spawn():
	timer.start(clamp(interval, SPAWN_MIN_INTERVAL, SPAWN_MAX_INTERVAL))
	
	if on_screen: return
	
	randomize()
	interval += SPAWN_INCREMENT
	SPAWN_COUNT -= 1
	
	var amount = clamp(ENEMY_AMOUNT, ENEMY_MIN_AMOUNT, ENEMY_MAX_AMOUNT)
	
	for i in amount:
		var EnemyType = MeleeBug
		
		if rand_range(0, 1.0) < MEDIC_CHANCE:
			EnemyType = HealerBug
		
		var enemy = EnemyType.instance()
		
		enemy.position = random_position()
		
		enemy.state = enemy.State.Default
		enemies_to_spawn.append(enemy)
		
	ENEMY_AMOUNT += ENEMY_INCREMENT
	
	if SPAWN_COUNT == 0:
		queue_free()

func random_position() -> Vector2:
	var angle = rand_range(0, 2 * PI)
	var _radius = rand_range(0, radius)
	
	return Vector2(cos(angle), sin(angle)) * _radius
	
func enter_screen():
	on_screen = true
	
func exit_screen():
	on_screen = false
	
# Lazy spawning
func _process(_delta):
	var count = SPAWNS_PER_FRAME
	
	for _i in range(count):
		var enemy = enemies_to_spawn.pop_back()
		if not enemy: return
		add_child(enemy)
	
"

[sub_resource type="CircleShape2D" id=5]
radius = 56.0

[node name="SpawnArea" type="Area2D"]
script = SubResource( 4 )

[node name="Interval" type="Timer" parent="."]
one_shot = true

[node name="VisibilityNotifier" type="VisibilityNotifier2D" parent="."]

[node name="SpawnArea" type="CollisionShape2D" parent="."]
shape = SubResource( 5 )
