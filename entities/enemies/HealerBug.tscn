[gd_scene load_steps=47 format=2]

[ext_resource path="res://ui/ValueBar.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/enemies/melee/run_back.png" type="Texture" id=2]
[ext_resource path="res://assets/enemies/melee/run_front.png" type="Texture" id=3]
[ext_resource path="res://assets/enemies/melee/run_side_front.png" type="Texture" id=4]
[ext_resource path="res://assets/enemies/melee/run_side.png" type="Texture" id=5]
[ext_resource path="res://assets/enemies/melee/run_side_back.png" type="Texture" id=6]
[ext_resource path="res://assets/enemies/melee/death.png" type="Texture" id=7]

[sub_resource type="GDScript" id=1]
script/source = "extends EnemyUnit

# Properties
export var HEAL_INTERVAL := 0.2
export var HEAL_AMOUNT := 2

export var REGEN_AMOUNT := 0.25

export var PATHFIND_INTERVAL := 0.5
export var OFF_SCREEN_PATHFIND_INTERVAL := 2.0

const HEALER_GROUP = \"healer\"

# Nodes
var pathfind_timer := Timer.new()
onready var heal_timer := Timer.new()
onready var heal_area := $HealingArea

# Signals
func _ready():
	add_to_group(HEALER_GROUP)
	
	## Healing timer
	add_child(heal_timer)
	heal_timer.start(HEAL_INTERVAL)
	# warning-ignore:return_value_discarded
	heal_timer.connect(\"timeout\", self, \"_on_heal\")
	
	yield(get_tree(), \"idle_frame\")
	
	## Pathfind timer
	add_child(pathfind_timer)
	pathfind_timer.start(PATHFIND_INTERVAL + rand_range(0, 2.0))
	pathfind_timer.autostart = false
	# warning-ignore:return_value_discarded
	navigation_target = weakref($\"/root/GameManager\".player)
	pathfind_timer.connect(\"timeout\", self, \"_on_generate_path\")
	pathfind_timer.start(rand_range(0, 2.0) + PATHFIND_INTERVAL)


func _physics_process(_delta):
	match state:
		State.Default:
			_set_animation()
			
			mv = navigate()

			mv = move_and_slide(mv * speed)
		State.Knockback:
			mv = move_and_slide(mv)
	
func _on_generate_path():
	generate_path()
	
	var player = $\"/root/GameManager\".player
	
	if player != null:
		pathfind_timer.start(
			PATHFIND_INTERVAL 
				if global_position.distance_squared_to(player.global_position) 
					< OFF_SCREEN * OFF_SCREEN else
			OFF_SCREEN_PATHFIND_INTERVAL)

	
func _on_heal():
	health = min(health + REGEN_AMOUNT, MAX_HEALTH)
	
	for body in heal_area.get_overlapping_bodies():
		if body is Enemy and not body.is_in_group(HEALER_GROUP) and not body == self:
			if body.health < body.MAX_HEALTH:
				body.health += HEAL_AMOUNT
				body.health = min(body.health, body.MAX_HEALTH)
				
				if body.has_node(\"HealingFX\"):
					body.get_node(\"HealingFX\").emitting = true

onready var previous_position := global_position

func _set_animation():
	if not is_instance_valid($AnimatedSprite):
		return
	
	#todo: Use idle anim when states are added
	var moveanim = \"run\"
	
	if mv != Vector2.ZERO:
		if global_position.distance_squared_to(previous_position) > 100:
			
			var angle = global_position.angle_to_point(previous_position)
			previous_position = global_position
			
			direction = AnimUtil.get_dir(angle)

		
	var diranim = AnimUtil.Dir2Anim[direction]
	
	$AnimatedSprite.flip_h = abs(AnimUtil.Dir2Angle[direction]) > 90
	$AnimatedSprite.play(\"%s_%s\" % [moveanim, diranim])

	
func on_death():
	var corpse := Node2D.new()
	
	get_parent().add_child(corpse)
	corpse.global_position = global_position
	corpse.z_index = 0
	var sprite = $AnimatedSprite
	
	remove_child(sprite)
	corpse.add_child(sprite)
	sprite.play(\"death\")
	
	queue_free()

"

[sub_resource type="CircleShape2D" id=2]

[sub_resource type="CircleShape2D" id=3]
radius = 27.9109

[sub_resource type="AtlasTexture" id=4]
atlas = ExtResource( 2 )
region = Rect2( 192, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=5]
atlas = ExtResource( 3 )
region = Rect2( 192, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=6]
atlas = ExtResource( 4 )
region = Rect2( 0, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=7]
atlas = ExtResource( 5 )
region = Rect2( 0, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=8]
atlas = ExtResource( 6 )
region = Rect2( 0, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=9]
atlas = ExtResource( 6 )
region = Rect2( 0, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=10]
atlas = ExtResource( 6 )
region = Rect2( 48, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=11]
atlas = ExtResource( 6 )
region = Rect2( 96, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=12]
atlas = ExtResource( 6 )
region = Rect2( 144, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=13]
atlas = ExtResource( 6 )
region = Rect2( 192, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=14]
atlas = ExtResource( 3 )
region = Rect2( 0, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=15]
atlas = ExtResource( 3 )
region = Rect2( 48, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=16]
atlas = ExtResource( 3 )
region = Rect2( 96, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=17]
atlas = ExtResource( 3 )
region = Rect2( 144, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=18]
atlas = ExtResource( 3 )
region = Rect2( 192, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=19]
atlas = ExtResource( 7 )
region = Rect2( 0, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=20]
atlas = ExtResource( 7 )
region = Rect2( 48, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=21]
atlas = ExtResource( 7 )
region = Rect2( 96, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=22]
atlas = ExtResource( 7 )
region = Rect2( 144, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=23]
atlas = ExtResource( 7 )
region = Rect2( 192, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=24]
atlas = ExtResource( 5 )
region = Rect2( 0, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=25]
atlas = ExtResource( 5 )
region = Rect2( 48, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=26]
atlas = ExtResource( 5 )
region = Rect2( 96, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=27]
atlas = ExtResource( 5 )
region = Rect2( 144, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=28]
atlas = ExtResource( 5 )
region = Rect2( 192, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=29]
atlas = ExtResource( 2 )
region = Rect2( 0, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=30]
atlas = ExtResource( 2 )
region = Rect2( 48, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=31]
atlas = ExtResource( 2 )
region = Rect2( 96, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=32]
atlas = ExtResource( 2 )
region = Rect2( 144, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=33]
atlas = ExtResource( 2 )
region = Rect2( 192, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=34]
atlas = ExtResource( 4 )
region = Rect2( 0, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=35]
atlas = ExtResource( 4 )
region = Rect2( 48, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=36]
atlas = ExtResource( 4 )
region = Rect2( 96, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=37]
atlas = ExtResource( 4 )
region = Rect2( 144, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=38]
atlas = ExtResource( 4 )
region = Rect2( 192, 0, 48, 48 )

[sub_resource type="SpriteFrames" id=39]
animations = [ {
"frames": [ SubResource( 4 ) ],
"loop": true,
"name": "idle_back",
"speed": 5.0
}, {
"frames": [ SubResource( 5 ) ],
"loop": true,
"name": "idle_front",
"speed": 5.0
}, {
"frames": [ SubResource( 6 ) ],
"loop": true,
"name": "idle_sidefront",
"speed": 5.0
}, {
"frames": [ SubResource( 7 ) ],
"loop": true,
"name": "idle_side",
"speed": 5.0
}, {
"frames": [ SubResource( 8 ) ],
"loop": true,
"name": "idle_sideback",
"speed": 5.0
}, {
"frames": [ SubResource( 9 ), SubResource( 10 ), SubResource( 11 ), SubResource( 12 ), SubResource( 13 ) ],
"loop": true,
"name": "run_sideback",
"speed": 15.0
}, {
"frames": [ SubResource( 14 ), SubResource( 15 ), SubResource( 16 ), SubResource( 17 ), SubResource( 18 ) ],
"loop": true,
"name": "run_front",
"speed": 15.0
}, {
"frames": [ SubResource( 19 ), SubResource( 20 ), SubResource( 21 ), SubResource( 22 ), SubResource( 23 ) ],
"loop": false,
"name": "death",
"speed": 12.0
}, {
"frames": [ SubResource( 24 ), SubResource( 25 ), SubResource( 26 ), SubResource( 27 ), SubResource( 28 ) ],
"loop": true,
"name": "run_side",
"speed": 15.0
}, {
"frames": [ SubResource( 29 ), SubResource( 30 ), SubResource( 31 ), SubResource( 32 ), SubResource( 33 ) ],
"loop": true,
"name": "run_back",
"speed": 15.0
}, {
"frames": [ SubResource( 34 ), SubResource( 35 ), SubResource( 36 ), SubResource( 37 ), SubResource( 38 ) ],
"loop": true,
"name": "run_sidefront",
"speed": 15.0
} ]

[node name="HealerBug" type="KinematicBody2D"]
z_index = 1
script = SubResource( 1 )
BASE_SPEED = 125
value = 1

[node name="ValueBar" parent="." instance=ExtResource( 1 )]
position = Vector2( 0.264862, 10.9919 )
value = "health"
max_value = "MAX_HEALTH"

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 2 )

[node name="HealingArea" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="HealingArea"]
position = Vector2( 0.0834274, 0 )
shape = SubResource( 3 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
modulate = Color( 0.541176, 0.976471, 0.45098, 1 )
position = Vector2( 0.0271316, 0.0735059 )
scale = Vector2( 1.04116, 1.04116 )
frames = SubResource( 39 )
animation = "idle_side"
playing = true
